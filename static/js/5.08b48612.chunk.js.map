{"version":3,"sources":["axios-auth.js","store/actions/signup.js","containers/Auth/Signup.js"],"names":["instance","axios","create","signup","name","email","password","dispatch","type","AUTH_START","post","returnSecureToken","then","res","authData","console","log","data","localStorage","setItem","idToken","Date","getTime","expiresIn","refreshToken","localId","AUTH_SUCCESS","setTimeout","logout","catch","error","AUTH_FAIL","signupFail","Auth","state","controls","config","id","placeholder","autoComplete","classes","value","validation","required","minLength","isValid","rule","RegExp","isReady","event","key","val","target","this","length","test","setState","onSignUp","props","button","onClick","className","disabled","input","Object","keys","map","Input","changed","inputChangedHandler","bind","valid","loading","Spinner","Component","connect","auth","refrestToken","userId","withErrorHandler"],"mappings":"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","file":"static/js/5.08b48612.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  \r\n});\r\n\r\nexport default instance;\r\n","import {AUTH_START, AUTH_SUCCESS, AUTH_FAIL} from './actionsTypes';\r\nimport axios from 'axios';\r\nimport logout from './logout';\r\nconst API_KEY = 'AIzaSyAE0BVX1eHGCHfHQW5KOrcJr5F2ZfuAJ34';\r\n\r\nexport const signupStart = () => {\r\n  return {\r\n    type: AUTH_START\r\n  }\r\n};\r\n\r\nexport const signupSuccess = (authData) => {\r\n  return {\r\n    type: AUTH_SUCCESS,\r\n    authData,\r\n  }\r\n};\r\n\r\nexport const signupFail = (error) => {\r\n  return {\r\n    type: AUTH_FAIL,\r\n    error,\r\n  }\r\n};\r\n\r\nexport const signup = (name, email, password) => {\r\n  return dispatch => {\r\n    dispatch(signupStart());\r\n    axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${API_KEY}`, {email, password, returnSecureToken: true}).then(res => {\r\n      console.log(res.data);\r\n      localStorage.setItem('idToken', res.data.idToken);\r\n      localStorage.setItem('expiryTime', new Date().getTime() + (+res.data.expiresIn*1000));\r\n      localStorage.setItem('refreshToken', res.data.refreshToken);\r\n      localStorage.setItem('localId', res.data.localId);\r\n      dispatch(signupSuccess(res.data));\r\n      setTimeout(() => {\r\n        dispatch(logout());\r\n      }, +res.data.expiresIn*1000);\r\n    }).catch(error => {\r\n      console.log(error);\r\n      dispatch(signupFail(error));\r\n    });\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './Auth.scss';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport axios from '../../axios-auth';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport {signup} from '../../store/actions/signup';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    controls: {\r\n      name: {\r\n        type: 'input',\r\n        config: {\r\n          type: 'text',\r\n          id: 'Auth__name',\r\n          placeholder: 'Name',\r\n          autoComplete: 'off',\r\n        },\r\n        classes: 'Auth__input',\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 1,\r\n          isValid: false,\r\n        },\r\n      },\r\n      email: {\r\n        type: 'input',\r\n        config: {\r\n          type: 'email',\r\n          id: 'Auth__email',\r\n          placeholder: 'E-mail',\r\n          autoComplete: 'off',\r\n        },\r\n        classes: 'Auth__input',\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          rule: new RegExp('^[a-zA-Z0-9]+@[a-zA-Z]+\\\\.[a-zA-Z]+$'),\r\n          isValid: false,\r\n        },\r\n      },\r\n      password: {\r\n        type: 'input',\r\n        config: {\r\n          type: 'password',\r\n          id: 'Auth__password',\r\n          placeholder: 'Password',\r\n          autoComplete: 'off',\r\n        },\r\n        classes: 'Auth__input',\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          isValid: false,\r\n          minLength: 8,\r\n        },\r\n      },\r\n    },\r\n    isReady: false,\r\n  };\r\n\r\n  inputChangedHandler(event, key) {\r\n    const val = event.target.value;\r\n    let isValid = true;\r\n    if (isValid && this.state.controls[key].validation.required) {\r\n      isValid = val.length !== 0;\r\n    }\r\n\r\n    if (isValid && this.state.controls[key].validation.minLength) {\r\n      isValid = val.length >= this.state.controls[key].validation.minLength;\r\n    }\r\n\r\n    if (isValid && this.state.controls[key].validation.rule) {\r\n      isValid = this.state.controls[key].validation.rule.test(val);\r\n    }\r\n\r\n    this.setState((state) => {\r\n      state.controls[key].value = val;\r\n      state.controls[key].validation.isValid = isValid;\r\n      let isReady = true;\r\n      for (let key in state.controls) {\r\n        if (!state.controls[key].validation.isValid) {\r\n          isReady = false;\r\n        }\r\n      }\r\n      state.isReady = isReady;\r\n      return state;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    \r\n    const onSignUp = () =>\r\n      this.props.onSignUp(\r\n        this.state.controls.name.value,\r\n        this.state.controls.email.value,\r\n        this.state.controls.password.value,\r\n      );\r\n    const button = this.state.isReady ? (\r\n      <button onClick={onSignUp} className='btn btn--green'>\r\n        {' '}\r\n        Sign up\r\n      </button>\r\n    ) : (\r\n      <button onClick={onSignUp} disabled className='btn btn--green'>\r\n        {' '}\r\n        Sign up\r\n      </button>\r\n    );\r\n    const input = Object.keys(this.state.controls).map((name) => (\r\n      <Input\r\n        id={name}\r\n        changed={this.inputChangedHandler.bind(this)}\r\n        key={name}\r\n        {...this.state.controls[name]}\r\n        valid={this.state.controls[name].validation.isValid}\r\n      />\r\n    ));\r\n    return (\r\n      <div className='Auth'>\r\n        <h1 className='Auth__title'>Sign Up!</h1>\r\n        {input}\r\n        {button}\r\n        {this.props.loading ? <Spinner /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    idToken: state.auth.idToken,\r\n    refrestToken: state.auth.refrestToken,\r\n    userId: state.auth.userId,\r\n    loading: state.auth.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSignUp: (name, email, password) =>\r\n      dispatch(signup(name, email, password)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Auth, axios));\r\n"],"sourceRoot":""}